# Generated from lib/redmine/safe_attributes.rb with RBS::Inline

module Redmine
  module SafeAttributes
    def self.included: (untyped base) -> untyped

    module ClassMethods
      # Declares safe attributes
      # An optional Proc can be given for conditional inclusion
      #
      # Example:
      #   safe_attributes 'title', 'pages'
      #   safe_attributes 'isbn', :if => {|book, user| book.author == user}
      def safe_attributes: (*untyped args) -> untyped
    end

    # Returns an array that can be safely set by user or current user
    #
    # Example:
    #   book.safe_attributes # => ['title', 'pages']
    #   book.safe_attributes(book.author) # => ['title', 'pages', 'isbn']
    def safe_attribute_names: (?untyped user) -> untyped

    # Returns true if attr can be set by user or the current user
    def safe_attribute?: (untyped attr, ?untyped user) -> untyped

    # Returns a hash with unsafe attributes removed
    # from the given attrs hash
    #
    # Example:
    #   book.delete_unsafe_attributes({'title' => 'My book', 'foo' => 'bar'})
    #   # => {'title' => 'My book'}
    def delete_unsafe_attributes: (untyped attrs, ?untyped user) -> untyped

    # Sets attributes from attrs that are safe
    # attrs is a Hash with string keys
    def safe_attributes=: (untyped attrs, ?untyped user) -> untyped
  end
end
