class User < ::Principal
  class HABTM_Groups < ::ActiveRecord::Base
    extend _ActiveRecord_Relation_ClassMethods[User::HABTM_Groups, ActiveRecord_Relation, top]

    module GeneratedAttributeMethods
      def group_id: () -> Integer

      def group_id=: (Integer) -> Integer

      def group_id?: () -> bool

      def group_id_changed?: () -> bool

      def group_id_change: () -> [ Integer?, Integer? ]

      def group_id_will_change!: () -> void

      def group_id_was: () -> Integer?

      def group_id_previously_changed?: () -> bool

      def group_id_previous_change: () -> Array[Integer?]?

      def group_id_previously_was: () -> Integer?

      def group_id_before_last_save: () -> Integer?

      def group_id_change_to_be_saved: () -> Array[Integer?]?

      def group_id_in_database: () -> Integer?

      def saved_change_to_group_id: () -> Array[Integer?]?

      def saved_change_to_group_id?: () -> bool

      def will_save_change_to_group_id?: () -> bool

      def restore_group_id!: () -> void

      def clear_group_id_change: () -> void

      def user_id: () -> Integer

      def user_id=: (Integer) -> Integer

      def user_id?: () -> bool

      def user_id_changed?: () -> bool

      def user_id_change: () -> [ Integer?, Integer? ]

      def user_id_will_change!: () -> void

      def user_id_was: () -> Integer?

      def user_id_previously_changed?: () -> bool

      def user_id_previous_change: () -> Array[Integer?]?

      def user_id_previously_was: () -> Integer?

      def user_id_before_last_save: () -> Integer?

      def user_id_change_to_be_saved: () -> Array[Integer?]?

      def user_id_in_database: () -> Integer?

      def saved_change_to_user_id: () -> Array[Integer?]?

      def saved_change_to_user_id?: () -> bool

      def will_save_change_to_user_id?: () -> bool

      def restore_user_id!: () -> void

      def clear_user_id_change: () -> void
    end
    include GeneratedAttributeMethods

    def left_side: () -> User?
    def left_side=: (User?) -> User?
    def reload_left_side: () -> User?
    def build_left_side: (untyped) -> User
    def create_left_side: (untyped) -> User
    def create_left_side!: (untyped) -> User
    def group: () -> Group?
    def group=: (Group?) -> Group?
    def reload_group: () -> Group?
    def build_group: (untyped) -> Group
    def create_group: (untyped) -> Group
    def create_group!: (untyped) -> Group

    module GeneratedRelationMethods
    end

    class ActiveRecord_Relation < ::ActiveRecord::Relation
      include GeneratedRelationMethods
      include _ActiveRecord_Relation[User::HABTM_Groups, top]
      include Enumerable[User::HABTM_Groups]
    end

    class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
      include GeneratedRelationMethods
      include _ActiveRecord_Relation[User::HABTM_Groups, top]
    end
  end
end
