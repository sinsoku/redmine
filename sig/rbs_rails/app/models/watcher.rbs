class Watcher < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[Watcher, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def watchable_type: () -> String

    def watchable_type=: (String) -> String

    def watchable_type?: () -> bool

    def watchable_type_changed?: () -> bool

    def watchable_type_change: () -> [ String?, String? ]

    def watchable_type_will_change!: () -> void

    def watchable_type_was: () -> String?

    def watchable_type_previously_changed?: () -> bool

    def watchable_type_previous_change: () -> Array[String?]?

    def watchable_type_previously_was: () -> String?

    def watchable_type_before_last_save: () -> String?

    def watchable_type_change_to_be_saved: () -> Array[String?]?

    def watchable_type_in_database: () -> String?

    def saved_change_to_watchable_type: () -> Array[String?]?

    def saved_change_to_watchable_type?: () -> bool

    def will_save_change_to_watchable_type?: () -> bool

    def restore_watchable_type!: () -> void

    def clear_watchable_type_change: () -> void

    def watchable_id: () -> Integer

    def watchable_id=: (Integer) -> Integer

    def watchable_id?: () -> bool

    def watchable_id_changed?: () -> bool

    def watchable_id_change: () -> [ Integer?, Integer? ]

    def watchable_id_will_change!: () -> void

    def watchable_id_was: () -> Integer?

    def watchable_id_previously_changed?: () -> bool

    def watchable_id_previous_change: () -> Array[Integer?]?

    def watchable_id_previously_was: () -> Integer?

    def watchable_id_before_last_save: () -> Integer?

    def watchable_id_change_to_be_saved: () -> Array[Integer?]?

    def watchable_id_in_database: () -> Integer?

    def saved_change_to_watchable_id: () -> Array[Integer?]?

    def saved_change_to_watchable_id?: () -> bool

    def will_save_change_to_watchable_id?: () -> bool

    def restore_watchable_id!: () -> void

    def clear_watchable_id_change: () -> void

    def user_id: () -> Integer?

    def user_id=: (Integer?) -> Integer?

    def user_id?: () -> bool

    def user_id_changed?: () -> bool

    def user_id_change: () -> [ Integer?, Integer? ]

    def user_id_will_change!: () -> void

    def user_id_was: () -> Integer?

    def user_id_previously_changed?: () -> bool

    def user_id_previous_change: () -> Array[Integer?]?

    def user_id_previously_was: () -> Integer?

    def user_id_before_last_save: () -> Integer?

    def user_id_change_to_be_saved: () -> Array[Integer?]?

    def user_id_in_database: () -> Integer?

    def saved_change_to_user_id: () -> Array[Integer?]?

    def saved_change_to_user_id?: () -> bool

    def will_save_change_to_user_id?: () -> bool

    def restore_user_id!: () -> void

    def clear_user_id_change: () -> void
  end
  include GeneratedAttributeMethods

  def watchable: () -> untyped
  def watchable=: (untyped?) -> untyped?
  def reload_watchable: () -> untyped?
  def user: () -> Principal
  def user=: (Principal?) -> Principal?
  def reload_user: () -> Principal?
  def build_user: (untyped) -> Principal
  def create_user: (untyped) -> Principal
  def create_user!: (untyped) -> Principal

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Watcher, Integer]
    include Enumerable[Watcher]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Watcher, Integer]
  end
end
