class Comment < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[Comment, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def commented_type: () -> String

    def commented_type=: (String) -> String

    def commented_type?: () -> bool

    def commented_type_changed?: () -> bool

    def commented_type_change: () -> [ String?, String? ]

    def commented_type_will_change!: () -> void

    def commented_type_was: () -> String?

    def commented_type_previously_changed?: () -> bool

    def commented_type_previous_change: () -> Array[String?]?

    def commented_type_previously_was: () -> String?

    def commented_type_before_last_save: () -> String?

    def commented_type_change_to_be_saved: () -> Array[String?]?

    def commented_type_in_database: () -> String?

    def saved_change_to_commented_type: () -> Array[String?]?

    def saved_change_to_commented_type?: () -> bool

    def will_save_change_to_commented_type?: () -> bool

    def restore_commented_type!: () -> void

    def clear_commented_type_change: () -> void

    def commented_id: () -> Integer

    def commented_id=: (Integer) -> Integer

    def commented_id?: () -> bool

    def commented_id_changed?: () -> bool

    def commented_id_change: () -> [ Integer?, Integer? ]

    def commented_id_will_change!: () -> void

    def commented_id_was: () -> Integer?

    def commented_id_previously_changed?: () -> bool

    def commented_id_previous_change: () -> Array[Integer?]?

    def commented_id_previously_was: () -> Integer?

    def commented_id_before_last_save: () -> Integer?

    def commented_id_change_to_be_saved: () -> Array[Integer?]?

    def commented_id_in_database: () -> Integer?

    def saved_change_to_commented_id: () -> Array[Integer?]?

    def saved_change_to_commented_id?: () -> bool

    def will_save_change_to_commented_id?: () -> bool

    def restore_commented_id!: () -> void

    def clear_commented_id_change: () -> void

    def author_id: () -> Integer

    def author_id=: (Integer) -> Integer

    def author_id?: () -> bool

    def author_id_changed?: () -> bool

    def author_id_change: () -> [ Integer?, Integer? ]

    def author_id_will_change!: () -> void

    def author_id_was: () -> Integer?

    def author_id_previously_changed?: () -> bool

    def author_id_previous_change: () -> Array[Integer?]?

    def author_id_previously_was: () -> Integer?

    def author_id_before_last_save: () -> Integer?

    def author_id_change_to_be_saved: () -> Array[Integer?]?

    def author_id_in_database: () -> Integer?

    def saved_change_to_author_id: () -> Array[Integer?]?

    def saved_change_to_author_id?: () -> bool

    def will_save_change_to_author_id?: () -> bool

    def restore_author_id!: () -> void

    def clear_author_id_change: () -> void

    def content: () -> String?

    def content=: (String?) -> String?

    def content?: () -> bool

    def content_changed?: () -> bool

    def content_change: () -> [ String?, String? ]

    def content_will_change!: () -> void

    def content_was: () -> String?

    def content_previously_changed?: () -> bool

    def content_previous_change: () -> Array[String?]?

    def content_previously_was: () -> String?

    def content_before_last_save: () -> String?

    def content_change_to_be_saved: () -> Array[String?]?

    def content_in_database: () -> String?

    def saved_change_to_content: () -> Array[String?]?

    def saved_change_to_content?: () -> bool

    def will_save_change_to_content?: () -> bool

    def restore_content!: () -> void

    def clear_content_change: () -> void

    def created_on: () -> ActiveSupport::TimeWithZone

    def created_on=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_on?: () -> bool

    def created_on_changed?: () -> bool

    def created_on_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_on_will_change!: () -> void

    def created_on_was: () -> ActiveSupport::TimeWithZone?

    def created_on_previously_changed?: () -> bool

    def created_on_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_on_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_on_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_on_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_on_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_on: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_on?: () -> bool

    def will_save_change_to_created_on?: () -> bool

    def restore_created_on!: () -> void

    def clear_created_on_change: () -> void

    def updated_on: () -> ActiveSupport::TimeWithZone

    def updated_on=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_on?: () -> bool

    def updated_on_changed?: () -> bool

    def updated_on_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_on_will_change!: () -> void

    def updated_on_was: () -> ActiveSupport::TimeWithZone?

    def updated_on_previously_changed?: () -> bool

    def updated_on_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_on_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_on_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_on_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_on_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_on: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_on?: () -> bool

    def will_save_change_to_updated_on?: () -> bool

    def restore_updated_on!: () -> void

    def clear_updated_on_change: () -> void
  end
  include GeneratedAttributeMethods

  def commented: () -> untyped
  def commented=: (untyped?) -> untyped?
  def reload_commented: () -> untyped?
  def author: () -> User
  def author=: (User?) -> User?
  def reload_author: () -> User?
  def build_author: (untyped) -> User
  def create_author: (untyped) -> User
  def create_author!: (untyped) -> User

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Comment, Integer]
    include Enumerable[Comment]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Comment, Integer]
  end
end
