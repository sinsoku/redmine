class WikiPage < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[WikiPage, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def wiki_id: () -> Integer

    def wiki_id=: (Integer) -> Integer

    def wiki_id?: () -> bool

    def wiki_id_changed?: () -> bool

    def wiki_id_change: () -> [ Integer?, Integer? ]

    def wiki_id_will_change!: () -> void

    def wiki_id_was: () -> Integer?

    def wiki_id_previously_changed?: () -> bool

    def wiki_id_previous_change: () -> Array[Integer?]?

    def wiki_id_previously_was: () -> Integer?

    def wiki_id_before_last_save: () -> Integer?

    def wiki_id_change_to_be_saved: () -> Array[Integer?]?

    def wiki_id_in_database: () -> Integer?

    def saved_change_to_wiki_id: () -> Array[Integer?]?

    def saved_change_to_wiki_id?: () -> bool

    def will_save_change_to_wiki_id?: () -> bool

    def restore_wiki_id!: () -> void

    def clear_wiki_id_change: () -> void

    def title: () -> String

    def title=: (String) -> String

    def title?: () -> bool

    def title_changed?: () -> bool

    def title_change: () -> [ String?, String? ]

    def title_will_change!: () -> void

    def title_was: () -> String?

    def title_previously_changed?: () -> bool

    def title_previous_change: () -> Array[String?]?

    def title_previously_was: () -> String?

    def title_before_last_save: () -> String?

    def title_change_to_be_saved: () -> Array[String?]?

    def title_in_database: () -> String?

    def saved_change_to_title: () -> Array[String?]?

    def saved_change_to_title?: () -> bool

    def will_save_change_to_title?: () -> bool

    def restore_title!: () -> void

    def clear_title_change: () -> void

    def created_on: () -> ActiveSupport::TimeWithZone

    def created_on=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_on?: () -> bool

    def created_on_changed?: () -> bool

    def created_on_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_on_will_change!: () -> void

    def created_on_was: () -> ActiveSupport::TimeWithZone?

    def created_on_previously_changed?: () -> bool

    def created_on_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_on_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_on_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_on_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_on_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_on: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_on?: () -> bool

    def will_save_change_to_created_on?: () -> bool

    def restore_created_on!: () -> void

    def clear_created_on_change: () -> void

    def protected: () -> bool

    def protected=: (bool) -> bool

    def protected?: () -> bool

    def protected_changed?: () -> bool

    def protected_change: () -> [ bool?, bool? ]

    def protected_will_change!: () -> void

    def protected_was: () -> bool?

    def protected_previously_changed?: () -> bool

    def protected_previous_change: () -> Array[bool?]?

    def protected_previously_was: () -> bool?

    def protected_before_last_save: () -> bool?

    def protected_change_to_be_saved: () -> Array[bool?]?

    def protected_in_database: () -> bool?

    def saved_change_to_protected: () -> Array[bool?]?

    def saved_change_to_protected?: () -> bool

    def will_save_change_to_protected?: () -> bool

    def restore_protected!: () -> void

    def clear_protected_change: () -> void

    def parent_id: () -> Integer?

    def parent_id=: (Integer?) -> Integer?

    def parent_id?: () -> bool

    def parent_id_changed?: () -> bool

    def parent_id_change: () -> [ Integer?, Integer? ]

    def parent_id_will_change!: () -> void

    def parent_id_was: () -> Integer?

    def parent_id_previously_changed?: () -> bool

    def parent_id_previous_change: () -> Array[Integer?]?

    def parent_id_previously_was: () -> Integer?

    def parent_id_before_last_save: () -> Integer?

    def parent_id_change_to_be_saved: () -> Array[Integer?]?

    def parent_id_in_database: () -> Integer?

    def saved_change_to_parent_id: () -> Array[Integer?]?

    def saved_change_to_parent_id?: () -> bool

    def will_save_change_to_parent_id?: () -> bool

    def restore_parent_id!: () -> void

    def clear_parent_id_change: () -> void
  end
  include GeneratedAttributeMethods
  def attachments: () -> Attachment::ActiveRecord_Associations_CollectionProxy
  def attachments=: (Attachment::ActiveRecord_Associations_CollectionProxy | Array[Attachment]) -> (Attachment::ActiveRecord_Associations_CollectionProxy | Array[Attachment])
  def attachment_ids: () -> Array[Integer]
  def attachment_ids=: (Array[Integer]) -> Array[Integer]
  def children: () -> WikiPage::ActiveRecord_Associations_CollectionProxy
  def children=: (WikiPage::ActiveRecord_Associations_CollectionProxy | Array[WikiPage]) -> (WikiPage::ActiveRecord_Associations_CollectionProxy | Array[WikiPage])
  def child_ids: () -> Array[Integer]
  def child_ids=: (Array[Integer]) -> Array[Integer]
  def watchers: () -> Watcher::ActiveRecord_Associations_CollectionProxy
  def watchers=: (Watcher::ActiveRecord_Associations_CollectionProxy | Array[Watcher]) -> (Watcher::ActiveRecord_Associations_CollectionProxy | Array[Watcher])
  def watcher_ids: () -> Array[Integer]
  def watcher_ids=: (Array[Integer]) -> Array[Integer]
  def watcher_users: () -> Principal::ActiveRecord_Associations_CollectionProxy
  def watcher_users=: (Principal::ActiveRecord_Associations_CollectionProxy | Array[Principal]) -> (Principal::ActiveRecord_Associations_CollectionProxy | Array[Principal])
  def watcher_user_ids: () -> Array[Integer]
  def watcher_user_ids=: (Array[Integer]) -> Array[Integer]
  def content: () -> WikiContent?
  def content=: (WikiContent?) -> WikiContent?
  def build_content: (untyped) -> WikiContent
  def create_content: (untyped) -> WikiContent
  def create_content!: (untyped) -> WikiContent
  def reload_content: () -> WikiContent?
  def content_without_text: () -> WikiContent?
  def content_without_text=: (WikiContent?) -> WikiContent?
  def build_content_without_text: (untyped) -> WikiContent
  def create_content_without_text: (untyped) -> WikiContent
  def create_content_without_text!: (untyped) -> WikiContent
  def reload_content_without_text: () -> WikiContent?
  def wiki: () -> Wiki
  def wiki=: (Wiki?) -> Wiki?
  def reload_wiki: () -> Wiki?
  def build_wiki: (untyped) -> Wiki
  def create_wiki: (untyped) -> Wiki
  def create_wiki!: (untyped) -> Wiki
  def parent: () -> WikiPage
  def parent=: (WikiPage?) -> WikiPage?
  def reload_parent: () -> WikiPage?
  def build_parent: (untyped) -> WikiPage
  def create_parent: (untyped) -> WikiPage
  def create_parent!: (untyped) -> WikiPage

  def self.with_updated_on: () -> ActiveRecord_Relation

  module GeneratedRelationMethods
    def with_updated_on: () -> ActiveRecord_Relation
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[WikiPage, Integer]
    include Enumerable[WikiPage]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[WikiPage, Integer]
  end
end
