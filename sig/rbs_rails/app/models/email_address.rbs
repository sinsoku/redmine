class EmailAddress < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[EmailAddress, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def user_id: () -> Integer

    def user_id=: (Integer) -> Integer

    def user_id?: () -> bool

    def user_id_changed?: () -> bool

    def user_id_change: () -> [ Integer?, Integer? ]

    def user_id_will_change!: () -> void

    def user_id_was: () -> Integer?

    def user_id_previously_changed?: () -> bool

    def user_id_previous_change: () -> Array[Integer?]?

    def user_id_previously_was: () -> Integer?

    def user_id_before_last_save: () -> Integer?

    def user_id_change_to_be_saved: () -> Array[Integer?]?

    def user_id_in_database: () -> Integer?

    def saved_change_to_user_id: () -> Array[Integer?]?

    def saved_change_to_user_id?: () -> bool

    def will_save_change_to_user_id?: () -> bool

    def restore_user_id!: () -> void

    def clear_user_id_change: () -> void

    def address: () -> String

    def address=: (String) -> String

    def address?: () -> bool

    def address_changed?: () -> bool

    def address_change: () -> [ String?, String? ]

    def address_will_change!: () -> void

    def address_was: () -> String?

    def address_previously_changed?: () -> bool

    def address_previous_change: () -> Array[String?]?

    def address_previously_was: () -> String?

    def address_before_last_save: () -> String?

    def address_change_to_be_saved: () -> Array[String?]?

    def address_in_database: () -> String?

    def saved_change_to_address: () -> Array[String?]?

    def saved_change_to_address?: () -> bool

    def will_save_change_to_address?: () -> bool

    def restore_address!: () -> void

    def clear_address_change: () -> void

    def is_default: () -> bool

    def is_default=: (bool) -> bool

    def is_default?: () -> bool

    def is_default_changed?: () -> bool

    def is_default_change: () -> [ bool?, bool? ]

    def is_default_will_change!: () -> void

    def is_default_was: () -> bool?

    def is_default_previously_changed?: () -> bool

    def is_default_previous_change: () -> Array[bool?]?

    def is_default_previously_was: () -> bool?

    def is_default_before_last_save: () -> bool?

    def is_default_change_to_be_saved: () -> Array[bool?]?

    def is_default_in_database: () -> bool?

    def saved_change_to_is_default: () -> Array[bool?]?

    def saved_change_to_is_default?: () -> bool

    def will_save_change_to_is_default?: () -> bool

    def restore_is_default!: () -> void

    def clear_is_default_change: () -> void

    def notify: () -> bool

    def notify=: (bool) -> bool

    def notify?: () -> bool

    def notify_changed?: () -> bool

    def notify_change: () -> [ bool?, bool? ]

    def notify_will_change!: () -> void

    def notify_was: () -> bool?

    def notify_previously_changed?: () -> bool

    def notify_previous_change: () -> Array[bool?]?

    def notify_previously_was: () -> bool?

    def notify_before_last_save: () -> bool?

    def notify_change_to_be_saved: () -> Array[bool?]?

    def notify_in_database: () -> bool?

    def saved_change_to_notify: () -> Array[bool?]?

    def saved_change_to_notify?: () -> bool

    def will_save_change_to_notify?: () -> bool

    def restore_notify!: () -> void

    def clear_notify_change: () -> void

    def created_on: () -> ActiveSupport::TimeWithZone

    def created_on=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_on?: () -> bool

    def created_on_changed?: () -> bool

    def created_on_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_on_will_change!: () -> void

    def created_on_was: () -> ActiveSupport::TimeWithZone?

    def created_on_previously_changed?: () -> bool

    def created_on_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_on_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_on_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_on_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_on_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_on: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_on?: () -> bool

    def will_save_change_to_created_on?: () -> bool

    def restore_created_on!: () -> void

    def clear_created_on_change: () -> void

    def updated_on: () -> ActiveSupport::TimeWithZone

    def updated_on=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_on?: () -> bool

    def updated_on_changed?: () -> bool

    def updated_on_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_on_will_change!: () -> void

    def updated_on_was: () -> ActiveSupport::TimeWithZone?

    def updated_on_previously_changed?: () -> bool

    def updated_on_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_on_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_on_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_on_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_on_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_on: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_on?: () -> bool

    def will_save_change_to_updated_on?: () -> bool

    def restore_updated_on!: () -> void

    def clear_updated_on_change: () -> void
  end
  include GeneratedAttributeMethods

  def user: () -> User
  def user=: (User?) -> User?
  def reload_user: () -> User?
  def build_user: (untyped) -> User
  def create_user: (untyped) -> User
  def create_user!: (untyped) -> User

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[EmailAddress, Integer]
    include Enumerable[EmailAddress]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[EmailAddress, Integer]
  end
end
