class Import < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[Import, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def type: () -> String?

    def type=: (String?) -> String?

    def type?: () -> bool

    def type_changed?: () -> bool

    def type_change: () -> [ String?, String? ]

    def type_will_change!: () -> void

    def type_was: () -> String?

    def type_previously_changed?: () -> bool

    def type_previous_change: () -> Array[String?]?

    def type_previously_was: () -> String?

    def type_before_last_save: () -> String?

    def type_change_to_be_saved: () -> Array[String?]?

    def type_in_database: () -> String?

    def saved_change_to_type: () -> Array[String?]?

    def saved_change_to_type?: () -> bool

    def will_save_change_to_type?: () -> bool

    def restore_type!: () -> void

    def clear_type_change: () -> void

    def user_id: () -> Integer

    def user_id=: (Integer) -> Integer

    def user_id?: () -> bool

    def user_id_changed?: () -> bool

    def user_id_change: () -> [ Integer?, Integer? ]

    def user_id_will_change!: () -> void

    def user_id_was: () -> Integer?

    def user_id_previously_changed?: () -> bool

    def user_id_previous_change: () -> Array[Integer?]?

    def user_id_previously_was: () -> Integer?

    def user_id_before_last_save: () -> Integer?

    def user_id_change_to_be_saved: () -> Array[Integer?]?

    def user_id_in_database: () -> Integer?

    def saved_change_to_user_id: () -> Array[Integer?]?

    def saved_change_to_user_id?: () -> bool

    def will_save_change_to_user_id?: () -> bool

    def restore_user_id!: () -> void

    def clear_user_id_change: () -> void

    def filename: () -> String?

    def filename=: (String?) -> String?

    def filename?: () -> bool

    def filename_changed?: () -> bool

    def filename_change: () -> [ String?, String? ]

    def filename_will_change!: () -> void

    def filename_was: () -> String?

    def filename_previously_changed?: () -> bool

    def filename_previous_change: () -> Array[String?]?

    def filename_previously_was: () -> String?

    def filename_before_last_save: () -> String?

    def filename_change_to_be_saved: () -> Array[String?]?

    def filename_in_database: () -> String?

    def saved_change_to_filename: () -> Array[String?]?

    def saved_change_to_filename?: () -> bool

    def will_save_change_to_filename?: () -> bool

    def restore_filename!: () -> void

    def clear_filename_change: () -> void

    def settings: () -> String?

    def settings=: (String?) -> String?

    def settings?: () -> bool

    def settings_changed?: () -> bool

    def settings_change: () -> [ String?, String? ]

    def settings_will_change!: () -> void

    def settings_was: () -> String?

    def settings_previously_changed?: () -> bool

    def settings_previous_change: () -> Array[String?]?

    def settings_previously_was: () -> String?

    def settings_before_last_save: () -> String?

    def settings_change_to_be_saved: () -> Array[String?]?

    def settings_in_database: () -> String?

    def saved_change_to_settings: () -> Array[String?]?

    def saved_change_to_settings?: () -> bool

    def will_save_change_to_settings?: () -> bool

    def restore_settings!: () -> void

    def clear_settings_change: () -> void

    def total_items: () -> Integer?

    def total_items=: (Integer?) -> Integer?

    def total_items?: () -> bool

    def total_items_changed?: () -> bool

    def total_items_change: () -> [ Integer?, Integer? ]

    def total_items_will_change!: () -> void

    def total_items_was: () -> Integer?

    def total_items_previously_changed?: () -> bool

    def total_items_previous_change: () -> Array[Integer?]?

    def total_items_previously_was: () -> Integer?

    def total_items_before_last_save: () -> Integer?

    def total_items_change_to_be_saved: () -> Array[Integer?]?

    def total_items_in_database: () -> Integer?

    def saved_change_to_total_items: () -> Array[Integer?]?

    def saved_change_to_total_items?: () -> bool

    def will_save_change_to_total_items?: () -> bool

    def restore_total_items!: () -> void

    def clear_total_items_change: () -> void

    def finished: () -> bool

    def finished=: (bool) -> bool

    def finished?: () -> bool

    def finished_changed?: () -> bool

    def finished_change: () -> [ bool?, bool? ]

    def finished_will_change!: () -> void

    def finished_was: () -> bool?

    def finished_previously_changed?: () -> bool

    def finished_previous_change: () -> Array[bool?]?

    def finished_previously_was: () -> bool?

    def finished_before_last_save: () -> bool?

    def finished_change_to_be_saved: () -> Array[bool?]?

    def finished_in_database: () -> bool?

    def saved_change_to_finished: () -> Array[bool?]?

    def saved_change_to_finished?: () -> bool

    def will_save_change_to_finished?: () -> bool

    def restore_finished!: () -> void

    def clear_finished_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods
  def items: () -> ImportItem::ActiveRecord_Associations_CollectionProxy
  def items=: (ImportItem::ActiveRecord_Associations_CollectionProxy | Array[ImportItem]) -> (ImportItem::ActiveRecord_Associations_CollectionProxy | Array[ImportItem])
  def item_ids: () -> Array[Integer]
  def item_ids=: (Array[Integer]) -> Array[Integer]

  def user: () -> User
  def user=: (User?) -> User?
  def reload_user: () -> User?
  def build_user: (untyped) -> User
  def create_user: (untyped) -> User
  def create_user!: (untyped) -> User

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Import, Integer]
    include Enumerable[Import]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Import, Integer]
  end
end
