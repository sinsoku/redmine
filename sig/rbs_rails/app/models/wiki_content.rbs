class WikiContent < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[WikiContent, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def page_id: () -> Integer

    def page_id=: (Integer) -> Integer

    def page_id?: () -> bool

    def page_id_changed?: () -> bool

    def page_id_change: () -> [ Integer?, Integer? ]

    def page_id_will_change!: () -> void

    def page_id_was: () -> Integer?

    def page_id_previously_changed?: () -> bool

    def page_id_previous_change: () -> Array[Integer?]?

    def page_id_previously_was: () -> Integer?

    def page_id_before_last_save: () -> Integer?

    def page_id_change_to_be_saved: () -> Array[Integer?]?

    def page_id_in_database: () -> Integer?

    def saved_change_to_page_id: () -> Array[Integer?]?

    def saved_change_to_page_id?: () -> bool

    def will_save_change_to_page_id?: () -> bool

    def restore_page_id!: () -> void

    def clear_page_id_change: () -> void

    def author_id: () -> Integer?

    def author_id=: (Integer?) -> Integer?

    def author_id?: () -> bool

    def author_id_changed?: () -> bool

    def author_id_change: () -> [ Integer?, Integer? ]

    def author_id_will_change!: () -> void

    def author_id_was: () -> Integer?

    def author_id_previously_changed?: () -> bool

    def author_id_previous_change: () -> Array[Integer?]?

    def author_id_previously_was: () -> Integer?

    def author_id_before_last_save: () -> Integer?

    def author_id_change_to_be_saved: () -> Array[Integer?]?

    def author_id_in_database: () -> Integer?

    def saved_change_to_author_id: () -> Array[Integer?]?

    def saved_change_to_author_id?: () -> bool

    def will_save_change_to_author_id?: () -> bool

    def restore_author_id!: () -> void

    def clear_author_id_change: () -> void

    def text: () -> String?

    def text=: (String?) -> String?

    def text?: () -> bool

    def text_changed?: () -> bool

    def text_change: () -> [ String?, String? ]

    def text_will_change!: () -> void

    def text_was: () -> String?

    def text_previously_changed?: () -> bool

    def text_previous_change: () -> Array[String?]?

    def text_previously_was: () -> String?

    def text_before_last_save: () -> String?

    def text_change_to_be_saved: () -> Array[String?]?

    def text_in_database: () -> String?

    def saved_change_to_text: () -> Array[String?]?

    def saved_change_to_text?: () -> bool

    def will_save_change_to_text?: () -> bool

    def restore_text!: () -> void

    def clear_text_change: () -> void

    def comments: () -> String?

    def comments=: (String?) -> String?

    def comments?: () -> bool

    def comments_changed?: () -> bool

    def comments_change: () -> [ String?, String? ]

    def comments_will_change!: () -> void

    def comments_was: () -> String?

    def comments_previously_changed?: () -> bool

    def comments_previous_change: () -> Array[String?]?

    def comments_previously_was: () -> String?

    def comments_before_last_save: () -> String?

    def comments_change_to_be_saved: () -> Array[String?]?

    def comments_in_database: () -> String?

    def saved_change_to_comments: () -> Array[String?]?

    def saved_change_to_comments?: () -> bool

    def will_save_change_to_comments?: () -> bool

    def restore_comments!: () -> void

    def clear_comments_change: () -> void

    def updated_on: () -> ActiveSupport::TimeWithZone

    def updated_on=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_on?: () -> bool

    def updated_on_changed?: () -> bool

    def updated_on_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_on_will_change!: () -> void

    def updated_on_was: () -> ActiveSupport::TimeWithZone?

    def updated_on_previously_changed?: () -> bool

    def updated_on_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_on_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_on_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_on_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_on_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_on: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_on?: () -> bool

    def will_save_change_to_updated_on?: () -> bool

    def restore_updated_on!: () -> void

    def clear_updated_on_change: () -> void

    def version: () -> Integer

    def version=: (Integer) -> Integer

    def version?: () -> bool

    def version_changed?: () -> bool

    def version_change: () -> [ Integer?, Integer? ]

    def version_will_change!: () -> void

    def version_was: () -> Integer?

    def version_previously_changed?: () -> bool

    def version_previous_change: () -> Array[Integer?]?

    def version_previously_was: () -> Integer?

    def version_before_last_save: () -> Integer?

    def version_change_to_be_saved: () -> Array[Integer?]?

    def version_in_database: () -> Integer?

    def saved_change_to_version: () -> Array[Integer?]?

    def saved_change_to_version?: () -> bool

    def will_save_change_to_version?: () -> bool

    def restore_version!: () -> void

    def clear_version_change: () -> void
  end
  include GeneratedAttributeMethods
  def versions: () -> WikiContentVersion::ActiveRecord_Associations_CollectionProxy
  def versions=: (WikiContentVersion::ActiveRecord_Associations_CollectionProxy | Array[WikiContentVersion]) -> (WikiContentVersion::ActiveRecord_Associations_CollectionProxy | Array[WikiContentVersion])
  def version_ids: () -> Array[Integer]
  def version_ids=: (Array[Integer]) -> Array[Integer]

  def page: () -> WikiPage
  def page=: (WikiPage?) -> WikiPage?
  def reload_page: () -> WikiPage?
  def build_page: (untyped) -> WikiPage
  def create_page: (untyped) -> WikiPage
  def create_page!: (untyped) -> WikiPage
  def author: () -> User
  def author=: (User?) -> User?
  def reload_author: () -> User?
  def build_author: (untyped) -> User
  def create_author: (untyped) -> User
  def create_author!: (untyped) -> User

  def self.without_text: () -> ActiveRecord_Relation

  module GeneratedRelationMethods
    def without_text: () -> ActiveRecord_Relation
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[WikiContent, Integer]
    include Enumerable[WikiContent]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[WikiContent, Integer]
  end
end
