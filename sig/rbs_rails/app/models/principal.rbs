class Principal < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[Principal, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def login: () -> String

    def login=: (String) -> String

    def login?: () -> bool

    def login_changed?: () -> bool

    def login_change: () -> [ String?, String? ]

    def login_will_change!: () -> void

    def login_was: () -> String?

    def login_previously_changed?: () -> bool

    def login_previous_change: () -> Array[String?]?

    def login_previously_was: () -> String?

    def login_before_last_save: () -> String?

    def login_change_to_be_saved: () -> Array[String?]?

    def login_in_database: () -> String?

    def saved_change_to_login: () -> Array[String?]?

    def saved_change_to_login?: () -> bool

    def will_save_change_to_login?: () -> bool

    def restore_login!: () -> void

    def clear_login_change: () -> void

    def hashed_password: () -> String

    def hashed_password=: (String) -> String

    def hashed_password?: () -> bool

    def hashed_password_changed?: () -> bool

    def hashed_password_change: () -> [ String?, String? ]

    def hashed_password_will_change!: () -> void

    def hashed_password_was: () -> String?

    def hashed_password_previously_changed?: () -> bool

    def hashed_password_previous_change: () -> Array[String?]?

    def hashed_password_previously_was: () -> String?

    def hashed_password_before_last_save: () -> String?

    def hashed_password_change_to_be_saved: () -> Array[String?]?

    def hashed_password_in_database: () -> String?

    def saved_change_to_hashed_password: () -> Array[String?]?

    def saved_change_to_hashed_password?: () -> bool

    def will_save_change_to_hashed_password?: () -> bool

    def restore_hashed_password!: () -> void

    def clear_hashed_password_change: () -> void

    def firstname: () -> String

    def firstname=: (String) -> String

    def firstname?: () -> bool

    def firstname_changed?: () -> bool

    def firstname_change: () -> [ String?, String? ]

    def firstname_will_change!: () -> void

    def firstname_was: () -> String?

    def firstname_previously_changed?: () -> bool

    def firstname_previous_change: () -> Array[String?]?

    def firstname_previously_was: () -> String?

    def firstname_before_last_save: () -> String?

    def firstname_change_to_be_saved: () -> Array[String?]?

    def firstname_in_database: () -> String?

    def saved_change_to_firstname: () -> Array[String?]?

    def saved_change_to_firstname?: () -> bool

    def will_save_change_to_firstname?: () -> bool

    def restore_firstname!: () -> void

    def clear_firstname_change: () -> void

    def lastname: () -> String

    def lastname=: (String) -> String

    def lastname?: () -> bool

    def lastname_changed?: () -> bool

    def lastname_change: () -> [ String?, String? ]

    def lastname_will_change!: () -> void

    def lastname_was: () -> String?

    def lastname_previously_changed?: () -> bool

    def lastname_previous_change: () -> Array[String?]?

    def lastname_previously_was: () -> String?

    def lastname_before_last_save: () -> String?

    def lastname_change_to_be_saved: () -> Array[String?]?

    def lastname_in_database: () -> String?

    def saved_change_to_lastname: () -> Array[String?]?

    def saved_change_to_lastname?: () -> bool

    def will_save_change_to_lastname?: () -> bool

    def restore_lastname!: () -> void

    def clear_lastname_change: () -> void

    def admin: () -> bool

    def admin=: (bool) -> bool

    def admin?: () -> bool

    def admin_changed?: () -> bool

    def admin_change: () -> [ bool?, bool? ]

    def admin_will_change!: () -> void

    def admin_was: () -> bool?

    def admin_previously_changed?: () -> bool

    def admin_previous_change: () -> Array[bool?]?

    def admin_previously_was: () -> bool?

    def admin_before_last_save: () -> bool?

    def admin_change_to_be_saved: () -> Array[bool?]?

    def admin_in_database: () -> bool?

    def saved_change_to_admin: () -> Array[bool?]?

    def saved_change_to_admin?: () -> bool

    def will_save_change_to_admin?: () -> bool

    def restore_admin!: () -> void

    def clear_admin_change: () -> void

    def status: () -> Integer

    def status=: (Integer) -> Integer

    def status?: () -> bool

    def status_changed?: () -> bool

    def status_change: () -> [ Integer?, Integer? ]

    def status_will_change!: () -> void

    def status_was: () -> Integer?

    def status_previously_changed?: () -> bool

    def status_previous_change: () -> Array[Integer?]?

    def status_previously_was: () -> Integer?

    def status_before_last_save: () -> Integer?

    def status_change_to_be_saved: () -> Array[Integer?]?

    def status_in_database: () -> Integer?

    def saved_change_to_status: () -> Array[Integer?]?

    def saved_change_to_status?: () -> bool

    def will_save_change_to_status?: () -> bool

    def restore_status!: () -> void

    def clear_status_change: () -> void

    def last_login_on: () -> ActiveSupport::TimeWithZone?

    def last_login_on=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

    def last_login_on?: () -> bool

    def last_login_on_changed?: () -> bool

    def last_login_on_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def last_login_on_will_change!: () -> void

    def last_login_on_was: () -> ActiveSupport::TimeWithZone?

    def last_login_on_previously_changed?: () -> bool

    def last_login_on_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def last_login_on_previously_was: () -> ActiveSupport::TimeWithZone?

    def last_login_on_before_last_save: () -> ActiveSupport::TimeWithZone?

    def last_login_on_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def last_login_on_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_last_login_on: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_last_login_on?: () -> bool

    def will_save_change_to_last_login_on?: () -> bool

    def restore_last_login_on!: () -> void

    def clear_last_login_on_change: () -> void

    def language: () -> String?

    def language=: (String?) -> String?

    def language?: () -> bool

    def language_changed?: () -> bool

    def language_change: () -> [ String?, String? ]

    def language_will_change!: () -> void

    def language_was: () -> String?

    def language_previously_changed?: () -> bool

    def language_previous_change: () -> Array[String?]?

    def language_previously_was: () -> String?

    def language_before_last_save: () -> String?

    def language_change_to_be_saved: () -> Array[String?]?

    def language_in_database: () -> String?

    def saved_change_to_language: () -> Array[String?]?

    def saved_change_to_language?: () -> bool

    def will_save_change_to_language?: () -> bool

    def restore_language!: () -> void

    def clear_language_change: () -> void

    def auth_source_id: () -> Integer?

    def auth_source_id=: (Integer?) -> Integer?

    def auth_source_id?: () -> bool

    def auth_source_id_changed?: () -> bool

    def auth_source_id_change: () -> [ Integer?, Integer? ]

    def auth_source_id_will_change!: () -> void

    def auth_source_id_was: () -> Integer?

    def auth_source_id_previously_changed?: () -> bool

    def auth_source_id_previous_change: () -> Array[Integer?]?

    def auth_source_id_previously_was: () -> Integer?

    def auth_source_id_before_last_save: () -> Integer?

    def auth_source_id_change_to_be_saved: () -> Array[Integer?]?

    def auth_source_id_in_database: () -> Integer?

    def saved_change_to_auth_source_id: () -> Array[Integer?]?

    def saved_change_to_auth_source_id?: () -> bool

    def will_save_change_to_auth_source_id?: () -> bool

    def restore_auth_source_id!: () -> void

    def clear_auth_source_id_change: () -> void

    def created_on: () -> ActiveSupport::TimeWithZone?

    def created_on=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

    def created_on?: () -> bool

    def created_on_changed?: () -> bool

    def created_on_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_on_will_change!: () -> void

    def created_on_was: () -> ActiveSupport::TimeWithZone?

    def created_on_previously_changed?: () -> bool

    def created_on_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_on_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_on_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_on_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_on_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_on: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_on?: () -> bool

    def will_save_change_to_created_on?: () -> bool

    def restore_created_on!: () -> void

    def clear_created_on_change: () -> void

    def updated_on: () -> ActiveSupport::TimeWithZone?

    def updated_on=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

    def updated_on?: () -> bool

    def updated_on_changed?: () -> bool

    def updated_on_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_on_will_change!: () -> void

    def updated_on_was: () -> ActiveSupport::TimeWithZone?

    def updated_on_previously_changed?: () -> bool

    def updated_on_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_on_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_on_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_on_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_on_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_on: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_on?: () -> bool

    def will_save_change_to_updated_on?: () -> bool

    def restore_updated_on!: () -> void

    def clear_updated_on_change: () -> void

    def type: () -> String?

    def type=: (String?) -> String?

    def type?: () -> bool

    def type_changed?: () -> bool

    def type_change: () -> [ String?, String? ]

    def type_will_change!: () -> void

    def type_was: () -> String?

    def type_previously_changed?: () -> bool

    def type_previous_change: () -> Array[String?]?

    def type_previously_was: () -> String?

    def type_before_last_save: () -> String?

    def type_change_to_be_saved: () -> Array[String?]?

    def type_in_database: () -> String?

    def saved_change_to_type: () -> Array[String?]?

    def saved_change_to_type?: () -> bool

    def will_save_change_to_type?: () -> bool

    def restore_type!: () -> void

    def clear_type_change: () -> void

    def mail_notification: () -> String

    def mail_notification=: (String) -> String

    def mail_notification?: () -> bool

    def mail_notification_changed?: () -> bool

    def mail_notification_change: () -> [ String?, String? ]

    def mail_notification_will_change!: () -> void

    def mail_notification_was: () -> String?

    def mail_notification_previously_changed?: () -> bool

    def mail_notification_previous_change: () -> Array[String?]?

    def mail_notification_previously_was: () -> String?

    def mail_notification_before_last_save: () -> String?

    def mail_notification_change_to_be_saved: () -> Array[String?]?

    def mail_notification_in_database: () -> String?

    def saved_change_to_mail_notification: () -> Array[String?]?

    def saved_change_to_mail_notification?: () -> bool

    def will_save_change_to_mail_notification?: () -> bool

    def restore_mail_notification!: () -> void

    def clear_mail_notification_change: () -> void

    def salt: () -> String?

    def salt=: (String?) -> String?

    def salt?: () -> bool

    def salt_changed?: () -> bool

    def salt_change: () -> [ String?, String? ]

    def salt_will_change!: () -> void

    def salt_was: () -> String?

    def salt_previously_changed?: () -> bool

    def salt_previous_change: () -> Array[String?]?

    def salt_previously_was: () -> String?

    def salt_before_last_save: () -> String?

    def salt_change_to_be_saved: () -> Array[String?]?

    def salt_in_database: () -> String?

    def saved_change_to_salt: () -> Array[String?]?

    def saved_change_to_salt?: () -> bool

    def will_save_change_to_salt?: () -> bool

    def restore_salt!: () -> void

    def clear_salt_change: () -> void

    def must_change_passwd: () -> bool

    def must_change_passwd=: (bool) -> bool

    def must_change_passwd?: () -> bool

    def must_change_passwd_changed?: () -> bool

    def must_change_passwd_change: () -> [ bool?, bool? ]

    def must_change_passwd_will_change!: () -> void

    def must_change_passwd_was: () -> bool?

    def must_change_passwd_previously_changed?: () -> bool

    def must_change_passwd_previous_change: () -> Array[bool?]?

    def must_change_passwd_previously_was: () -> bool?

    def must_change_passwd_before_last_save: () -> bool?

    def must_change_passwd_change_to_be_saved: () -> Array[bool?]?

    def must_change_passwd_in_database: () -> bool?

    def saved_change_to_must_change_passwd: () -> Array[bool?]?

    def saved_change_to_must_change_passwd?: () -> bool

    def will_save_change_to_must_change_passwd?: () -> bool

    def restore_must_change_passwd!: () -> void

    def clear_must_change_passwd_change: () -> void

    def passwd_changed_on: () -> ActiveSupport::TimeWithZone?

    def passwd_changed_on=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

    def passwd_changed_on?: () -> bool

    def passwd_changed_on_changed?: () -> bool

    def passwd_changed_on_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def passwd_changed_on_will_change!: () -> void

    def passwd_changed_on_was: () -> ActiveSupport::TimeWithZone?

    def passwd_changed_on_previously_changed?: () -> bool

    def passwd_changed_on_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def passwd_changed_on_previously_was: () -> ActiveSupport::TimeWithZone?

    def passwd_changed_on_before_last_save: () -> ActiveSupport::TimeWithZone?

    def passwd_changed_on_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def passwd_changed_on_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_passwd_changed_on: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_passwd_changed_on?: () -> bool

    def will_save_change_to_passwd_changed_on?: () -> bool

    def restore_passwd_changed_on!: () -> void

    def clear_passwd_changed_on_change: () -> void

    def twofa_scheme: () -> String?

    def twofa_scheme=: (String?) -> String?

    def twofa_scheme?: () -> bool

    def twofa_scheme_changed?: () -> bool

    def twofa_scheme_change: () -> [ String?, String? ]

    def twofa_scheme_will_change!: () -> void

    def twofa_scheme_was: () -> String?

    def twofa_scheme_previously_changed?: () -> bool

    def twofa_scheme_previous_change: () -> Array[String?]?

    def twofa_scheme_previously_was: () -> String?

    def twofa_scheme_before_last_save: () -> String?

    def twofa_scheme_change_to_be_saved: () -> Array[String?]?

    def twofa_scheme_in_database: () -> String?

    def saved_change_to_twofa_scheme: () -> Array[String?]?

    def saved_change_to_twofa_scheme?: () -> bool

    def will_save_change_to_twofa_scheme?: () -> bool

    def restore_twofa_scheme!: () -> void

    def clear_twofa_scheme_change: () -> void

    def twofa_totp_key: () -> String?

    def twofa_totp_key=: (String?) -> String?

    def twofa_totp_key?: () -> bool

    def twofa_totp_key_changed?: () -> bool

    def twofa_totp_key_change: () -> [ String?, String? ]

    def twofa_totp_key_will_change!: () -> void

    def twofa_totp_key_was: () -> String?

    def twofa_totp_key_previously_changed?: () -> bool

    def twofa_totp_key_previous_change: () -> Array[String?]?

    def twofa_totp_key_previously_was: () -> String?

    def twofa_totp_key_before_last_save: () -> String?

    def twofa_totp_key_change_to_be_saved: () -> Array[String?]?

    def twofa_totp_key_in_database: () -> String?

    def saved_change_to_twofa_totp_key: () -> Array[String?]?

    def saved_change_to_twofa_totp_key?: () -> bool

    def will_save_change_to_twofa_totp_key?: () -> bool

    def restore_twofa_totp_key!: () -> void

    def clear_twofa_totp_key_change: () -> void

    def twofa_totp_last_used_at: () -> Integer?

    def twofa_totp_last_used_at=: (Integer?) -> Integer?

    def twofa_totp_last_used_at?: () -> bool

    def twofa_totp_last_used_at_changed?: () -> bool

    def twofa_totp_last_used_at_change: () -> [ Integer?, Integer? ]

    def twofa_totp_last_used_at_will_change!: () -> void

    def twofa_totp_last_used_at_was: () -> Integer?

    def twofa_totp_last_used_at_previously_changed?: () -> bool

    def twofa_totp_last_used_at_previous_change: () -> Array[Integer?]?

    def twofa_totp_last_used_at_previously_was: () -> Integer?

    def twofa_totp_last_used_at_before_last_save: () -> Integer?

    def twofa_totp_last_used_at_change_to_be_saved: () -> Array[Integer?]?

    def twofa_totp_last_used_at_in_database: () -> Integer?

    def saved_change_to_twofa_totp_last_used_at: () -> Array[Integer?]?

    def saved_change_to_twofa_totp_last_used_at?: () -> bool

    def will_save_change_to_twofa_totp_last_used_at?: () -> bool

    def restore_twofa_totp_last_used_at!: () -> void

    def clear_twofa_totp_last_used_at_change: () -> void

    def twofa_required: () -> bool?

    def twofa_required=: (bool?) -> bool?

    def twofa_required?: () -> bool

    def twofa_required_changed?: () -> bool

    def twofa_required_change: () -> [ bool?, bool? ]

    def twofa_required_will_change!: () -> void

    def twofa_required_was: () -> bool?

    def twofa_required_previously_changed?: () -> bool

    def twofa_required_previous_change: () -> Array[bool?]?

    def twofa_required_previously_was: () -> bool?

    def twofa_required_before_last_save: () -> bool?

    def twofa_required_change_to_be_saved: () -> Array[bool?]?

    def twofa_required_in_database: () -> bool?

    def saved_change_to_twofa_required: () -> Array[bool?]?

    def saved_change_to_twofa_required?: () -> bool

    def will_save_change_to_twofa_required?: () -> bool

    def restore_twofa_required!: () -> void

    def clear_twofa_required_change: () -> void
  end
  include GeneratedAttributeMethods
  def members: () -> Member::ActiveRecord_Associations_CollectionProxy
  def members=: (Member::ActiveRecord_Associations_CollectionProxy | Array[Member]) -> (Member::ActiveRecord_Associations_CollectionProxy | Array[Member])
  def member_ids: () -> Array[Integer]
  def member_ids=: (Array[Integer]) -> Array[Integer]
  def memberships: () -> Member::ActiveRecord_Associations_CollectionProxy
  def memberships=: (Member::ActiveRecord_Associations_CollectionProxy | Array[Member]) -> (Member::ActiveRecord_Associations_CollectionProxy | Array[Member])
  def membership_ids: () -> Array[Integer]
  def membership_ids=: (Array[Integer]) -> Array[Integer]
  def projects: () -> Project::ActiveRecord_Associations_CollectionProxy
  def projects=: (Project::ActiveRecord_Associations_CollectionProxy | Array[Project]) -> (Project::ActiveRecord_Associations_CollectionProxy | Array[Project])
  def project_ids: () -> Array[Integer]
  def project_ids=: (Array[Integer]) -> Array[Integer]
  def issue_categories: () -> IssueCategory::ActiveRecord_Associations_CollectionProxy
  def issue_categories=: (IssueCategory::ActiveRecord_Associations_CollectionProxy | Array[IssueCategory]) -> (IssueCategory::ActiveRecord_Associations_CollectionProxy | Array[IssueCategory])
  def issue_category_ids: () -> Array[Integer]
  def issue_category_ids=: (Array[Integer]) -> Array[Integer]

  def self.active: () -> ActiveRecord_Relation
  def self.sorted: () -> ActiveRecord_Relation
  def self.assignable_watchers: () -> ActiveRecord_Relation

  module GeneratedRelationMethods
    def active: () -> ActiveRecord_Relation

    def sorted: () -> ActiveRecord_Relation

    def assignable_watchers: () -> ActiveRecord_Relation
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Principal, Integer]
    include Enumerable[Principal]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Principal, Integer]
  end
end
