class Role < ::ApplicationRecord
  class HABTM_ManagedRoles < ::ActiveRecord::Base
    extend _ActiveRecord_Relation_ClassMethods[Role::HABTM_ManagedRoles, ActiveRecord_Relation, top]

    module GeneratedAttributeMethods
      def role_id: () -> Integer

      def role_id=: (Integer) -> Integer

      def role_id?: () -> bool

      def role_id_changed?: () -> bool

      def role_id_change: () -> [ Integer?, Integer? ]

      def role_id_will_change!: () -> void

      def role_id_was: () -> Integer?

      def role_id_previously_changed?: () -> bool

      def role_id_previous_change: () -> Array[Integer?]?

      def role_id_previously_was: () -> Integer?

      def role_id_before_last_save: () -> Integer?

      def role_id_change_to_be_saved: () -> Array[Integer?]?

      def role_id_in_database: () -> Integer?

      def saved_change_to_role_id: () -> Array[Integer?]?

      def saved_change_to_role_id?: () -> bool

      def will_save_change_to_role_id?: () -> bool

      def restore_role_id!: () -> void

      def clear_role_id_change: () -> void

      def managed_role_id: () -> Integer

      def managed_role_id=: (Integer) -> Integer

      def managed_role_id?: () -> bool

      def managed_role_id_changed?: () -> bool

      def managed_role_id_change: () -> [ Integer?, Integer? ]

      def managed_role_id_will_change!: () -> void

      def managed_role_id_was: () -> Integer?

      def managed_role_id_previously_changed?: () -> bool

      def managed_role_id_previous_change: () -> Array[Integer?]?

      def managed_role_id_previously_was: () -> Integer?

      def managed_role_id_before_last_save: () -> Integer?

      def managed_role_id_change_to_be_saved: () -> Array[Integer?]?

      def managed_role_id_in_database: () -> Integer?

      def saved_change_to_managed_role_id: () -> Array[Integer?]?

      def saved_change_to_managed_role_id?: () -> bool

      def will_save_change_to_managed_role_id?: () -> bool

      def restore_managed_role_id!: () -> void

      def clear_managed_role_id_change: () -> void
    end
    include GeneratedAttributeMethods

    def left_side: () -> Role?
    def left_side=: (Role?) -> Role?
    def reload_left_side: () -> Role?
    def build_left_side: (untyped) -> Role
    def create_left_side: (untyped) -> Role
    def create_left_side!: (untyped) -> Role
    def managed_role: () -> Role?
    def managed_role=: (Role?) -> Role?
    def reload_managed_role: () -> Role?
    def build_managed_role: (untyped) -> Role
    def create_managed_role: (untyped) -> Role
    def create_managed_role!: (untyped) -> Role

    module GeneratedRelationMethods
    end

    class ActiveRecord_Relation < ::ActiveRecord::Relation
      include GeneratedRelationMethods
      include _ActiveRecord_Relation[Role::HABTM_ManagedRoles, top]
      include Enumerable[Role::HABTM_ManagedRoles]
    end

    class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
      include GeneratedRelationMethods
      include _ActiveRecord_Relation[Role::HABTM_ManagedRoles, top]
    end
  end
end
