class Repository < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[Repository, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def project_id: () -> Integer

    def project_id=: (Integer) -> Integer

    def project_id?: () -> bool

    def project_id_changed?: () -> bool

    def project_id_change: () -> [ Integer?, Integer? ]

    def project_id_will_change!: () -> void

    def project_id_was: () -> Integer?

    def project_id_previously_changed?: () -> bool

    def project_id_previous_change: () -> Array[Integer?]?

    def project_id_previously_was: () -> Integer?

    def project_id_before_last_save: () -> Integer?

    def project_id_change_to_be_saved: () -> Array[Integer?]?

    def project_id_in_database: () -> Integer?

    def saved_change_to_project_id: () -> Array[Integer?]?

    def saved_change_to_project_id?: () -> bool

    def will_save_change_to_project_id?: () -> bool

    def restore_project_id!: () -> void

    def clear_project_id_change: () -> void

    def url: () -> String

    def url=: (String) -> String

    def url?: () -> bool

    def url_changed?: () -> bool

    def url_change: () -> [ String?, String? ]

    def url_will_change!: () -> void

    def url_was: () -> String?

    def url_previously_changed?: () -> bool

    def url_previous_change: () -> Array[String?]?

    def url_previously_was: () -> String?

    def url_before_last_save: () -> String?

    def url_change_to_be_saved: () -> Array[String?]?

    def url_in_database: () -> String?

    def saved_change_to_url: () -> Array[String?]?

    def saved_change_to_url?: () -> bool

    def will_save_change_to_url?: () -> bool

    def restore_url!: () -> void

    def clear_url_change: () -> void

    def login: () -> String?

    def login=: (String?) -> String?

    def login?: () -> bool

    def login_changed?: () -> bool

    def login_change: () -> [ String?, String? ]

    def login_will_change!: () -> void

    def login_was: () -> String?

    def login_previously_changed?: () -> bool

    def login_previous_change: () -> Array[String?]?

    def login_previously_was: () -> String?

    def login_before_last_save: () -> String?

    def login_change_to_be_saved: () -> Array[String?]?

    def login_in_database: () -> String?

    def saved_change_to_login: () -> Array[String?]?

    def saved_change_to_login?: () -> bool

    def will_save_change_to_login?: () -> bool

    def restore_login!: () -> void

    def clear_login_change: () -> void

    def password: () -> String?

    def password=: (String?) -> String?

    def password?: () -> bool

    def password_changed?: () -> bool

    def password_change: () -> [ String?, String? ]

    def password_will_change!: () -> void

    def password_was: () -> String?

    def password_previously_changed?: () -> bool

    def password_previous_change: () -> Array[String?]?

    def password_previously_was: () -> String?

    def password_before_last_save: () -> String?

    def password_change_to_be_saved: () -> Array[String?]?

    def password_in_database: () -> String?

    def saved_change_to_password: () -> Array[String?]?

    def saved_change_to_password?: () -> bool

    def will_save_change_to_password?: () -> bool

    def restore_password!: () -> void

    def clear_password_change: () -> void

    def root_url: () -> String?

    def root_url=: (String?) -> String?

    def root_url?: () -> bool

    def root_url_changed?: () -> bool

    def root_url_change: () -> [ String?, String? ]

    def root_url_will_change!: () -> void

    def root_url_was: () -> String?

    def root_url_previously_changed?: () -> bool

    def root_url_previous_change: () -> Array[String?]?

    def root_url_previously_was: () -> String?

    def root_url_before_last_save: () -> String?

    def root_url_change_to_be_saved: () -> Array[String?]?

    def root_url_in_database: () -> String?

    def saved_change_to_root_url: () -> Array[String?]?

    def saved_change_to_root_url?: () -> bool

    def will_save_change_to_root_url?: () -> bool

    def restore_root_url!: () -> void

    def clear_root_url_change: () -> void

    def type: () -> String?

    def type=: (String?) -> String?

    def type?: () -> bool

    def type_changed?: () -> bool

    def type_change: () -> [ String?, String? ]

    def type_will_change!: () -> void

    def type_was: () -> String?

    def type_previously_changed?: () -> bool

    def type_previous_change: () -> Array[String?]?

    def type_previously_was: () -> String?

    def type_before_last_save: () -> String?

    def type_change_to_be_saved: () -> Array[String?]?

    def type_in_database: () -> String?

    def saved_change_to_type: () -> Array[String?]?

    def saved_change_to_type?: () -> bool

    def will_save_change_to_type?: () -> bool

    def restore_type!: () -> void

    def clear_type_change: () -> void

    def path_encoding: () -> String?

    def path_encoding=: (String?) -> String?

    def path_encoding?: () -> bool

    def path_encoding_changed?: () -> bool

    def path_encoding_change: () -> [ String?, String? ]

    def path_encoding_will_change!: () -> void

    def path_encoding_was: () -> String?

    def path_encoding_previously_changed?: () -> bool

    def path_encoding_previous_change: () -> Array[String?]?

    def path_encoding_previously_was: () -> String?

    def path_encoding_before_last_save: () -> String?

    def path_encoding_change_to_be_saved: () -> Array[String?]?

    def path_encoding_in_database: () -> String?

    def saved_change_to_path_encoding: () -> Array[String?]?

    def saved_change_to_path_encoding?: () -> bool

    def will_save_change_to_path_encoding?: () -> bool

    def restore_path_encoding!: () -> void

    def clear_path_encoding_change: () -> void

    def log_encoding: () -> String?

    def log_encoding=: (String?) -> String?

    def log_encoding?: () -> bool

    def log_encoding_changed?: () -> bool

    def log_encoding_change: () -> [ String?, String? ]

    def log_encoding_will_change!: () -> void

    def log_encoding_was: () -> String?

    def log_encoding_previously_changed?: () -> bool

    def log_encoding_previous_change: () -> Array[String?]?

    def log_encoding_previously_was: () -> String?

    def log_encoding_before_last_save: () -> String?

    def log_encoding_change_to_be_saved: () -> Array[String?]?

    def log_encoding_in_database: () -> String?

    def saved_change_to_log_encoding: () -> Array[String?]?

    def saved_change_to_log_encoding?: () -> bool

    def will_save_change_to_log_encoding?: () -> bool

    def restore_log_encoding!: () -> void

    def clear_log_encoding_change: () -> void

    def extra_info: () -> String?

    def extra_info=: (String?) -> String?

    def extra_info?: () -> bool

    def extra_info_changed?: () -> bool

    def extra_info_change: () -> [ String?, String? ]

    def extra_info_will_change!: () -> void

    def extra_info_was: () -> String?

    def extra_info_previously_changed?: () -> bool

    def extra_info_previous_change: () -> Array[String?]?

    def extra_info_previously_was: () -> String?

    def extra_info_before_last_save: () -> String?

    def extra_info_change_to_be_saved: () -> Array[String?]?

    def extra_info_in_database: () -> String?

    def saved_change_to_extra_info: () -> Array[String?]?

    def saved_change_to_extra_info?: () -> bool

    def will_save_change_to_extra_info?: () -> bool

    def restore_extra_info!: () -> void

    def clear_extra_info_change: () -> void

    def identifier: () -> String?

    def identifier=: (String?) -> String?

    def identifier?: () -> bool

    def identifier_changed?: () -> bool

    def identifier_change: () -> [ String?, String? ]

    def identifier_will_change!: () -> void

    def identifier_was: () -> String?

    def identifier_previously_changed?: () -> bool

    def identifier_previous_change: () -> Array[String?]?

    def identifier_previously_was: () -> String?

    def identifier_before_last_save: () -> String?

    def identifier_change_to_be_saved: () -> Array[String?]?

    def identifier_in_database: () -> String?

    def saved_change_to_identifier: () -> Array[String?]?

    def saved_change_to_identifier?: () -> bool

    def will_save_change_to_identifier?: () -> bool

    def restore_identifier!: () -> void

    def clear_identifier_change: () -> void

    def is_default: () -> bool?

    def is_default=: (bool?) -> bool?

    def is_default?: () -> bool

    def is_default_changed?: () -> bool

    def is_default_change: () -> [ bool?, bool? ]

    def is_default_will_change!: () -> void

    def is_default_was: () -> bool?

    def is_default_previously_changed?: () -> bool

    def is_default_previous_change: () -> Array[bool?]?

    def is_default_previously_was: () -> bool?

    def is_default_before_last_save: () -> bool?

    def is_default_change_to_be_saved: () -> Array[bool?]?

    def is_default_in_database: () -> bool?

    def saved_change_to_is_default: () -> Array[bool?]?

    def saved_change_to_is_default?: () -> bool

    def will_save_change_to_is_default?: () -> bool

    def restore_is_default!: () -> void

    def clear_is_default_change: () -> void

    def created_on: () -> ActiveSupport::TimeWithZone?

    def created_on=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

    def created_on?: () -> bool

    def created_on_changed?: () -> bool

    def created_on_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_on_will_change!: () -> void

    def created_on_was: () -> ActiveSupport::TimeWithZone?

    def created_on_previously_changed?: () -> bool

    def created_on_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_on_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_on_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_on_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_on_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_on: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_on?: () -> bool

    def will_save_change_to_created_on?: () -> bool

    def restore_created_on!: () -> void

    def clear_created_on_change: () -> void
  end
  include GeneratedAttributeMethods
  def changesets: () -> Changeset::ActiveRecord_Associations_CollectionProxy
  def changesets=: (Changeset::ActiveRecord_Associations_CollectionProxy | Array[Changeset]) -> (Changeset::ActiveRecord_Associations_CollectionProxy | Array[Changeset])
  def changeset_ids: () -> Array[Integer]
  def changeset_ids=: (Array[Integer]) -> Array[Integer]
  def filechanges: () -> Change::ActiveRecord_Associations_CollectionProxy
  def filechanges=: (Change::ActiveRecord_Associations_CollectionProxy | Array[Change]) -> (Change::ActiveRecord_Associations_CollectionProxy | Array[Change])
  def filechange_ids: () -> Array[Integer]
  def filechange_ids=: (Array[Integer]) -> Array[Integer]

  def project: () -> Project
  def project=: (Project?) -> Project?
  def reload_project: () -> Project?
  def build_project: (untyped) -> Project
  def create_project: (untyped) -> Project
  def create_project!: (untyped) -> Project

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Repository, Integer]
    include Enumerable[Repository]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Repository, Integer]
  end
end
